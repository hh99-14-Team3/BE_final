name: CI-CD

on:
  push:
    branches:
      - release

env:
  S3_BUCKET_NAME: mogakkos3
  RESOURCE_PATH: ./src/main/resources/application.properties
  CODE_DEPLOY_APPLICATION_NAME: mogakkoon
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: mogakkoon-codingking

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # (2) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/checkout@v3
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
      - run: cat ./src/main/resources/application.properties

      - name: Set executable permission for gradlew
        run: chmod +x ./gradlew

#      - name: Set Secret

#        env:
#          OCCUPY_SECRET: ${{ secrets.APPLICATION_PROPERTIES }}
##        OCCUPY_SECRET2: ${{ secrets.APPLICATION_NAVERMAIL_YML }}
#          OCCUPY_SECRET_DIR: src/main/resources
#          OCCUPY_SECRET_DIR_FILE_NAME1: application.properties
##        OCCUPY_SECRET_DIR_FILE_NAME2: application-navermail.yml
#        run: echo $OCCUPY_SECRET | base64 --decode > $APPLICATION_PROPERTIES/$OCCUPY_SECRET_DIR_FILE_NAME1
#      - name: Set Properties
#        run: |
#          echo "${{secrets.APPLICATION_PROPERTIES}}" | base64 --decode > src/main/resources/application.properties
#          find src
      # (3) Gradle build (Test 제외)
      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: clean build -x test

      # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # (5) 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
